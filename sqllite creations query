
CREATE TABLE Categories (
    CategoryName TEXT PRIMARY KEY
);


INSERT INTO Categories (CategoryName) VALUES
('Beverages'),
('Snacks'),
('Dairy'),
('Fruits'),
('Vegetables');


CREATE TABLE Suppliers (
    SupplierID INTEGER PRIMARY KEY AUTOINCREMENT,
    Name TEXT NOT NULL,
    Phone TEXT,
    Email TEXT,
    Address TEXT
);


INSERT INTO Suppliers (Name, Phone, Email, Address) VALUES
('Supplier A', '0123456789', 'supplierA@example.com', '123 Street A'),
('Supplier B', '0987654321', 'supplierB@example.com', '456 Street B'),
('Supplier C', '0112233445', 'supplierC@example.com', '789 Street C');

-- إعادة إنشاء جدول Products مع استخدام CategoryName كمفتاح خارجي
CREATE TABLE Products (
    ProductID INTEGER PRIMARY KEY AUTOINCREMENT,
    Name TEXT NOT NULL,
    CategoryName TEXT,
    SupplierID INTEGER,
    Price REAL NOT NULL,
    Stock INTEGER NOT NULL,
    ExpirationDate DATE,
    Description TEXT,
    FOREIGN KEY (CategoryName) REFERENCES Categories(CategoryName),
    FOREIGN KEY (SupplierID) REFERENCES Suppliers(SupplierID)
);

-- إدخال البيانات في جدول Products
INSERT INTO Products (Name, CategoryName, SupplierID, Price, Stock, ExpirationDate, Description) VALUES
('Apple Juice', 'Beverages', 1, 20.5, 50, '2025-01-01', 'Fresh apple juice'),
('Chocolate Bar', 'Snacks', 2, 5.0, 100, '2024-12-31', 'Delicious milk chocolate'),
('Cheddar Cheese', 'Dairy', 3, 40.0, 30, '2024-11-30', 'Aged cheddar cheese'),
('Bananas', 'Fruits', 2, 10.0, 75, NULL, 'Fresh bananas'),
('Carrots', 'Vegetables', 1, 8.5, 60, NULL, 'Organic carrots');

-- إعادة إنشاء جدول Customers
CREATE TABLE Customers (
    CustomerID INTEGER PRIMARY KEY AUTOINCREMENT,
    Name TEXT NOT NULL,
    Phone TEXT,
    Email TEXT,
    Address TEXT,
    LoyaltyPoints INTEGER DEFAULT 0
);


INSERT INTO Customers (Name, Phone, Email, Address, LoyaltyPoints) VALUES
('John Doe', '0123456789', 'john.doe@example.com', '123 Main Street', 50),
('Jane Smith', '0987654321', 'jane.smith@example.com', '456 Elm Street', 100),
('Ali Ahmed', '0111122233', 'ali.ahmed@example.com', '789 Oak Street', 25);


CREATE TABLE Employees (
    EmployeeID INTEGER PRIMARY KEY AUTOINCREMENT,
    Name TEXT NOT NULL,
    Position TEXT,
    Salary REAL,
    HireDate DATE,
    Phone TEXT
);

-- إدخال البيانات في جدول Employees
INSERT INTO Employees (Name, Position, Salary, HireDate, Phone) VALUES
('yousef', 'Cashier', 3000.0, '2020-05-01', '0123456789'),
('hedra', 'Manager', 5000.0, '2018-03-15', '0111122233'),
('mohaned', 'Stock Keeper', 2500.0, '2022-08-10', '0101234567');

-- إعادة إنشاء جدول UserAccounts
CREATE TABLE UserAccounts (
    AccountID INTEGER PRIMARY KEY AUTOINCREMENT,
    Username TEXT NOT NULL UNIQUE,
    Password TEXT NOT NULL,
    Role INTEGER NOT NULL,
    EmployeeID INTEGER,
    FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID)
);

-- إدخال البيانات في جدول UserAccounts
INSERT INTO UserAccounts (Username, Password, Role, EmployeeID) VALUES
('cash', '123456', 2, 1),
('stock', '123456', 1, 2),
('manager', '1234567', 3, 3);

-- إعادة إنشاء جدول Discounts مع استخدام CategoryName كمفتاح خارجي
CREATE TABLE Discounts (
    DiscountID INTEGER PRIMARY KEY AUTOINCREMENT,
    ProductID INTEGER,
    StartDate DATE NOT NULL,
    EndDate DATE NOT NULL,
    Percentage REAL NOT NULL,
    CategoryName TEXT,
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID),
    FOREIGN KEY (CategoryName) REFERENCES Categories(CategoryName)
);

-- إدخال البيانات في جدول Discounts
INSERT INTO Discounts (ProductID, StartDate, EndDate, Percentage, CategoryName) VALUES
(1, '2024-12-01', '2024-12-31', 10.0, 'Beverages'),
(2, '2024-11-15', '2024-12-15', 5.0, 'Snacks');

-- إعادة إنشاء جدول Sales
CREATE TABLE Sales (
    SaleID INTEGER PRIMARY KEY AUTOINCREMENT,
    CustomerID INTEGER,
    EmployeeID INTEGER,
    TotalAmount REAL NOT NULL,
    SaleDate DATE NOT NULL,
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID),
    FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID)
);

-- إدخال البيانات في جدول Sales
INSERT INTO Sales (CustomerID, EmployeeID, TotalAmount, SaleDate) VALUES
(1, 1, 150.0, '2024-12-01'),
(2, 2, 200.0, '2024-12-02');

-- إعادة إنشاء جدول SaleDetails
CREATE TABLE SaleDetails (
    SaleDetailID INTEGER PRIMARY KEY AUTOINCREMENT,
    SaleID INTEGER,
    ProductID INTEGER,
    Quantity INTEGER NOT NULL,
    Price REAL NOT NULL,
    FOREIGN KEY (SaleID) REFERENCES Sales(SaleID),
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);

-- إدخال البيانات في جدول SaleDetails
INSERT INTO SaleDetails (SaleID, ProductID, Quantity, Price) VALUES
(1, 1, 3, 18.45), -- سعر المنتج بعد الخصم
(1, 2, 2, 4.75),
(2, 3, 1, 40.0);

-- إعادة إنشاء جدول Purchases
CREATE TABLE Purchases (
    PurchaseID INTEGER PRIMARY KEY AUTOINCREMENT,
    SupplierID INTEGER,
    EmployeeID INTEGER,
    TotalAmount REAL NOT NULL,
    PurchaseDate DATE NOT NULL,
    FOREIGN KEY (SupplierID) REFERENCES Suppliers(SupplierID),
    FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID)
);

-- إدخال البيانات في جدول Purchases
INSERT INTO Purchases (SupplierID, EmployeeID, TotalAmount, PurchaseDate) VALUES
(1, 3, 500.0, '2024-11-30'),
(2, 1, 300.0, '2024-12-01');

-- إعادة إنشاء جدول PurchaseDetails
CREATE TABLE PurchaseDetails (
    PurchaseDetailID INTEGER PRIMARY KEY AUTOINCREMENT,
    PurchaseID INTEGER,
    ProductID INTEGER,
    Quantity INTEGER NOT NULL,
    Price REAL NOT NULL,
    FOREIGN KEY (PurchaseID) REFERENCES Purchases(PurchaseID),
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);

-- إدخال البيانات في جدول PurchaseDetails
INSERT INTO PurchaseDetails (PurchaseID, ProductID, Quantity, Price) VALUES
(1, 1, 20, 18.0),
(1, 2, 50, 4.5),
(2, 3, 10, 38.0);
-- إنشاء جدول الفواتير
CREATE TABLE Invoices (
    InvoiceID INTEGER PRIMARY KEY AUTOINCREMENT,
    InvoiceName TEXT NOT NULL,       -- اسم الفاتورة
    InvoiceDate DATE NOT NULL,       -- تاريخ الفاتورة
    InvoiceFile BLOB NOT NULL,       -- محتوى الفاتورة (ملف تكست)
    CustomerID INTEGER,              -- معرف العميل (كمرجع)
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)
);ALTER TABLE Invoices ADD COLUMN discount DOUBLE;
